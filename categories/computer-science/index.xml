<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Computer Science on Jinsu Playground</title><link>https://umi0410.github.io/categories/computer-science/</link><description>Recent content in Computer Science on Jinsu Playground</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Mon, 19 Dec 2022 23:00:00 +0900</lastBuildDate><atom:link href="https://umi0410.github.io/categories/computer-science/index.xml" rel="self" type="application/rss+xml"/><item><title>[책] 디버깅을 통해 배우는 리눅스 커널의 구조와 원리 1편</title><link>https://umi0410.github.io/blog/computer-science/book-debugging-linux-kernel/</link><pubDate>Mon, 19 Dec 2022 23:00:00 +0900</pubDate><guid>https://umi0410.github.io/blog/computer-science/book-debugging-linux-kernel/</guid><description>시작하며 이 책을 읽기 전, 커널이나 운영체제는 나에게 꽤나 안개 같은 존재였다. 나는 클라우드 인프라를 다루는 엔지니어이기에 커널이나 운영체제에 대해 잘 알지 못하는 점이 약간은 찝찝하고 부끄럽게 느껴져 이 책을 통해 커널이 어떻게 동작하는지 좀 더 알아가고 싶었다.
책에 담긴 내용 간단히 정리 실제로 커널을 빌드하고 설치하는 방법 ftrace, trace32 등의 커널 개발, 디버깅에 도움되는 도구들 사용법 process나 thread 등의 개념이 실제로 구현된 자료구조 인터럽트가 발생하고 감지되어 처리되기까지의 일련의 과정 인터럽트 처리 기법 장단점 장점 실제로 커널을 빌드하고 설치해볼 수 있다!</description></item><item><title>[책] 실습과 그림으로 배우는 리눅스 구조 리뷰</title><link>https://umi0410.github.io/blog/computer-science/linux-architecture-with-practice-and-images-review/</link><pubDate>Sun, 09 Oct 2022 19:00:00 +0900</pubDate><guid>https://umi0410.github.io/blog/computer-science/linux-architecture-with-practice-and-images-review/</guid><description>시작하며 Istio in Action을 읽고난 뒤에 리눅스나 커널에 대한 책을 읽어보겠다는 계획을 갖게 되었습니다. 정확히는 DevOps와 SE를 위한 리눅스 커널 이야기라는 책을 읽고싶었습니다. 기존에는 그 책이 사무실에 비치되어있었지만 이번에 사무실을 이사하면서 그 책이 어디갔는지 보이지가 않더라구요. 그래서 그냥 다른 책장에 비치되어있던 이 책을 읽어봤습니다.
다루고 있는 내용은 주로 리눅스 구조라기보다는 전반적인 컴퓨터 구조, 운영체제 같았습니다.
책에 담긴 내용 간단히 정리 커널의 역할, 운영체제의 역할이 무엇인지. 커널과 운영체제 및 드라이버들이 없다면 어떤 불편이 있을지 설명합니다.</description></item></channel></rss>